name: Deployment

on:
  push:
    branches:
      - main

env:
  KUBECONFIG_B64: ${{ secrets.KUBECONFIG }}

jobs:
  build-and-push:
    permissions:
      contents: read
      packages: write
      id-token: write
      actions: read
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: Create KUBECONFIG
        run: |
          echo $KUBECONFIG_B64 | base64 --decode > greenie-kubeconfig.yaml
          echo "KUBECONFIG=$(realpath greenie-kubeconfig.yaml)" >> $GITHUB_ENV

      - uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Helm repo setup"
        run: |
          kubectl create namespace mongodb --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace redis --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace grafana --dry-run=client -o yaml | kubectl apply -f -


          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo add jetstack https://charts.jetstack.io
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add azure-marketplace https://marketplace.azurecr.io/helm/v1/repo
          helm repo add grafana https://grafana.github.io/helm-charts

          helm repo update

      - name: "Redis"
        run: |
          # helm upgrade --install --namespace redis -f redis/values-dev.yaml redis-dev bitnami/redis
          # helm upgrade --install --namespace redis -f redis/values-prod.yaml redis-prod bitnami/redis

      - name: "Nginx ingress controller"
        run: |

          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.crds.yaml

          kubectl apply --namespace default -f issuers/dev.yaml
          kubectl apply --namespace default -f issuers/prod.yaml

          helm upgrade --install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.11.0
          helm upgrade --install --namespace nginx-ingress --create-namespace nginx-ingress ingress-nginx/ingress-nginx --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz --set controller.publishService.enabled=true -f ./ingress/nginx-values.yaml

      - name: "Apply Ingress"
        run: |
          kubectl apply --namespace backend -f ingress/dev/backend.yaml
          kubectl apply --namespace frontend -f ingress/dev/frontend.yaml
          kubectl apply --namespace auth -f ingress/dev/auth.yaml
          kubectl apply --namespace utils -f ingress/dev/utils.yaml
          kubectl apply --namespace remote -f ingress/dev/remote.yaml

          kubectl apply --namespace backend -f ingress/prod/backend.yaml
          kubectl apply --namespace frontend -f ingress/prod/frontend.yaml
          kubectl apply --namespace auth -f ingress/prod/auth.yaml
          kubectl apply --namespace utils -f ingress/prod/utils.yaml

          kubectl apply --namespace grafana -f ingress/tools/grafana.yaml

      - name: "Grafana"
        run: |
          helm upgrade --install --namespace grafana -f prometheus/values.yaml prometheus prometheus-community/kube-prometheus-stack
          helm upgrade --install --namespace grafana -f prometheus/loki-values.yaml loki azure-marketplace/grafana-loki
          helm upgrade --install --namespace grafana -f prometheus/tempo-values.yaml tempo grafana/tempo-distributed

